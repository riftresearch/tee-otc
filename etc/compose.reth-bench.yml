configs:
  reth-entrypoint:
    content: |
      #!/bin/bash
      set -euo pipefail
      
      # Reth snapshot configuration
      archive_url="https://snapshots.publicnode.com/ethereum-holesky-reth-archive-4539801.tar.lz4"
      reth_data_dir="$$RETH_DATA_DIR"

      echo "Checking Reth data directory: $$reth_data_dir"

      
      # Check if the holesky directory is empty (no db or static_files folders)
      if [[ ! -d "$$reth_data_dir/db" ]] && [[ ! -d "$$reth_data_dir/static_files" ]]; then
          echo "Reth data directory appears to be empty. Downloading Reth snapshot..."
          
          # Ensure the data directory exists
          mkdir -p "$$reth_data_dir"
          
          # Define temporary download location
          snapshot_file="/tmp/reth-snapshot.tar.lz4"
          
          echo "Downloading Reth snapshot from: $$archive_url"
          echo "Download location: $$snapshot_file"
          
          # Download with wget using range headers for resumable downloads
          # -c : Continue/resume a previous transfer
          # -O : Output file
          # --show-progress : Show progress bar
          wget -c --show-progress -O "$$snapshot_file" "$$archive_url"
          
          echo "Download complete. Extracting to: $$reth_data_dir"
          
          # Extract the snapshot
          # Use pv if available for progress, otherwise plain extraction
          if command -v pv &> /dev/null; then
              pv "$$snapshot_file" | lz4 -d | tar -x -C "$$reth_data_dir"
          else
              lz4 -d "$$snapshot_file" | tar -x -C "$$reth_data_dir"
          fi
          
          echo "Extraction complete"
          
          # Clean up the downloaded snapshot file
          rm -f "$$snapshot_file"
      else
          echo "Reth data directory already contains blockchain data"
          if [[ -d "$$reth_data_dir" ]]; then
              echo "Data directory size: $$(du -sh $$reth_data_dir | cut -f1)"
          fi
      fi
      
      # Clean up any other temporary files
      rm -rf /tmp/*
      
      echo "Starting Reth with arguments: $*"

      exec reth "$@"


services:
  reth:
    mem_limit: "30g"          
    mem_reservation: "26g"    
    memswap_limit: "30g"      
    restart: no 
    container_name: reth-holesky
    build:
      context: .
      dockerfile_inline: |
        FROM ghcr.io/paradigmxyz/reth:v1.8.1
        
        USER root
        
        RUN apt-get update && apt-get install -y \
            wget \
            curl \ 
            lz4 \
            bash \
            coreutils \
            && rm -rf /var/lib/apt/lists/*
        
        # Create reth user and data directory
        RUN useradd -m -u 1000 -s /bin/bash reth \
            && mkdir -p /root/.local/share/reth/holesky \
            && chown -R reth:reth /root/.local/share/reth
        
        ENTRYPOINT ["/usr/local/bin/reth-entrypoint.sh"]
    #depends_on:
      #eth-jwt-generator:
      #  condition: service_completed_successfully
    environment:
      RETH_DATA_DIR: /root/.local/share/reth/holesky
    ports:
      - "9001:9001" # metrics
      - "30303:30303" # eth/66 peering
      - "8545:8545" # rpc
      - "8551:8551" # engine
    volumes:
      - reth_holesky_data_5:/root/.local/share/reth/holesky
      - reth_logs:/root/logs
      #- eth_jwt_data:/root/jwt:ro
    configs:
      - source: reth-entrypoint
        target: /usr/local/bin/reth-entrypoint.sh
        mode: 0755
    pid: host
    command: >
      re-execute
      --chain holesky
      --datadir /root/.local/share/reth/holesky
      --from 4439800 
      --to 4539800
      --num-tasks 16 

networks:
  reth-network:
    driver: bridge

volumes:
  reth_logs:
  reth_holesky_data_5:
