configs:
  reth-entrypoint:
    content: |
      #!/bin/bash
      
      # Config
      archive_url="$$ARCHIVE_URL"
      reth_data_dir="$$RETH_DATA_DIR"
      
      # Guard: ensure env is set
      if [[ -z "$${reth_data_dir:-}" ]]; then
        echo "ERROR: RETH_DATA_DIR is empty or not set."
        env | sort | sed -n '1,120p'
        exit 1
      fi
      
      if [[ -z "$${archive_url:-}" ]]; then
        echo "ERROR: archive_url is empty."
        exit 1
      fi
      
      echo "Checking Reth data directory: $$reth_data_dir"
      echo "Download URL: $$archive_url"
      
      # Only download if db/static_files missing
      if [[ ! -d "$$reth_data_dir/db" ]] && [[ ! -d "$$reth_data_dir/static_files" ]]; then
        echo "Reth data directory appears empty. Downloading snapshot..."
        mkdir -p "$$reth_data_dir"
        snapshot_file="/tmp/reth-snapshot.tar.lz4"
        echo "Saving to: $$snapshot_file"
        
        # Download with aria2c for speed and reliability
        aria2c \
          --continue=true \
          --max-connection-per-server=16 \
          --min-split-size=1M \
          --split=16 \
          --max-tries=1000 \
          --retry-wait=5 \
          --timeout=300 \
          --lowest-speed-limit=5K \
          --max-overall-download-limit=0 \
          --dir=/tmp \
          --out=reth-snapshot.tar.lz4 \
          "$$archive_url"
        
        echo "Download complete. Verifying file..."
        if [[ ! -s "$$snapshot_file" ]]; then
          echo "Error: Snapshot file is empty. Exiting."
          exit 1
        fi
        
        echo "Extracting snapshot to: $$reth_data_dir"
        if command -v pv >/dev/null 2>&1; then
          pv "$$snapshot_file" | lz4 -d | tar -x -C "$$reth_data_dir"
        else
          lz4 -d "$$snapshot_file" | tar -x -C "$$reth_data_dir"
        fi
        
        echo "Extraction complete."
        rm -f "$$snapshot_file"
      else
        echo "Reth data directory already contains blockchain data."
        if [[ -d "$$reth_data_dir" ]]; then
          echo "Data directory size: $$(du -sh "$$reth_data_dir" | cut -f1)"
        fi
      fi
      
      rm -rf /tmp/*
      echo "Starting Reth with arguments: $*"
      exec reth $@

services:
  reth:
    mem_limit: "30g"
    mem_reservation: "26g"
    memswap_limit: "30g"
    restart: "no"
    container_name: reth-holesky
    build:
      context: .
      dockerfile_inline: |
        FROM ghcr.io/paradigmxyz/reth:v1.8.1
        USER root
        RUN apt-get update && apt-get install -y \
            aria2 \
            lz4 \
            bash \
            coreutils \
            pv \
            && rm -rf /var/lib/apt/lists/*
        RUN useradd -m -u 1000 -s /bin/bash reth \
            && mkdir -p /root/.local/share/reth/holesky \
            && chown -R reth:reth /root/.local/share/reth
        ENTRYPOINT ["/usr/local/bin/reth-entrypoint.sh"]
    environment:
      RETH_DATA_DIR: /root/.local/share/reth/holesky
      ARCHIVE_URL: https://snapshots.publicnode.com/ethereum-holesky-reth-archive-4539801.tar.lz4
    ports:
      - "9001:9001"
      - "30303:30303"
      - "8545:8545"
      - "8551:8551"
    volumes:
      - reth_holesky_data_7:/root/.local/share/reth/holesky
      - reth_logs:/root/logs
    configs:
      - source: reth-entrypoint
        target: /usr/local/bin/reth-entrypoint.sh
        mode: 0755
    pid: host
    command: >
      re-execute
      --chain holesky
      --datadir /root/.local/share/reth/holesky
      --from 4439800
      --to 4539800
      --num-tasks 16

networks:
  reth-network:
    driver: bridge

volumes:
  reth_logs:
  reth_holesky_data_7:
