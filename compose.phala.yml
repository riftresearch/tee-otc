services:
  postgres:
    image: postgres:16-alpine
    container_name: tee-otc-postgres
    environment:
      POSTGRES_USER: otc_user
      POSTGRES_PASSWORD: otc_password
      POSTGRES_DB: otc_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U otc_user -d otc_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - tee-network

  helios:
    container_name: tee-helios 
    build:
      context: .
      dockerfile_inline: |
        FROM ubuntu:24.04
        RUN apt-get update && apt-get install -y curl ca-certificates && rm -rf /var/lib/apt/lists/*
        # Install Helios
        RUN curl -L 'https://github.com/a16z/helios/releases/download/0.9.0/helios_linux_amd64.tar.gz' | tar -xzC /usr/local/bin
        EXPOSE 8545
        WORKDIR /root
        # Default command runs Helios JSON-RPC on :8545
        CMD [ "helios", "ethereum", "--execution-rpc", "${UNTRUSTED_EVM_RPC_URL}", "--checkpoint", "0xf95f9c34be687e3cef0906d25e51f3568798fb11155b00d715416dba3d70a313", "--rpc-bind-ip", "0.0.0.0"]
    environment:
      UNTRUSTED_EVM_RPC_URL: ${UNTRUSTED_EVM_RPC_URL}
    ports: 
      - "8550:8545"

    healthcheck:
      test:
        [
          "CMD-SHELL",
          'curl -s -X POST http://localhost:8545 -H "Content-Type: application/json" -d ''{"jsonrpc":"2.0","method":"eth_chainId","params":[],"id":1}'' || exit 1',
        ]
      interval: 10s
      timeout: 5s
      retries: 5

    networks:
      - tee-network
    platform: linux/amd64

  bitcoin-core:
    container_name: tee-bitcoin-core
    build:
      context: .
      dockerfile_inline: |
        FROM debian:bookworm-slim

        # Install dependencies
        RUN apt-get update \
          && apt-get install -y --no-install-recommends \
             ca-certificates \
             curl \
             tar \
             bash \
             lz4 \
             wget \
          && rm -rf /var/lib/apt/lists/*

        # Create bitcoin user and data dir
        RUN useradd -m -u 1000 -s /bin/bash bitcoin \
          && mkdir -p /home/bitcoin/.bitcoin \
          && chown -R bitcoin:bitcoin /home/bitcoin/.bitcoin

        # Download and install Bitcoin Core
        WORKDIR /opt/bitcoin
        RUN curl -fsSL "https://bitcoincore.org/bin/bitcoin-core-29.0/bitcoin-29.0-x86_64-linux-gnu.tar.gz" -o bitcoin.tar.gz \
          && tar -xzf bitcoin.tar.gz --strip-components=1 \
          && install -m 0755 -o root -g root -t /usr/local/bin bin/* \
          && rm -rf /opt/bitcoin

        # Copy entrypoint script from host
        COPY bitcoin-entrypoint.sh /usr/local/bin/bitcoin-entrypoint.sh
        RUN chmod +x /usr/local/bin/bitcoin-entrypoint.sh

        EXPOSE 8332 8333
        VOLUME ["/home/bitcoin/.bitcoin"]
        USER bitcoin
        WORKDIR /home/bitcoin
        ENTRYPOINT ["/usr/local/bin/bitcoin-entrypoint.sh"]
    command:
      - "-server=1"
      - "-txindex=1"
      - "-rpcbind=0.0.0.0"
      - "-rpcallowip=0.0.0.0/0"
      - "-rpcuser=user"
      - "-rpcpassword=pass"
      - "-datadir=/home/bitcoin/.bitcoin"
      - "-fallbackfee=0.0002"
    volumes:
      - bitcoin_data:/home/bitcoin/.bitcoin
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "bitcoin-cli -rpcuser=user -rpcpassword=pass getblockchaininfo > /dev/null || exit 1",
        ]
      interval: 20s
      timeout: 10s
      retries: 10
      start_period: 30s
    networks:
      - tee-network
    platform: linux/amd64

  otc-server:
    build:
      context: .
      dockerfile_inline: |
        FROM rust:1.88 as builder
        WORKDIR /app
        COPY . .
        RUN cargo build --release --bin otc-server

        FROM debian:bookworm-slim
        RUN apt-get update && apt-get install -y \
            ca-certificates \
            && rm -rf /var/lib/apt/lists/*
        WORKDIR /app
        COPY --from=builder /app/target/release/otc-server /app/
        COPY prod_whitelisted_market_makers.json /app/
        EXPOSE 4422 
        CMD ["./otc-server", "--host", "0.0.0.0", "--port", "4422"]
    container_name: tee-otc-server
    depends_on:
      postgres:
        condition: service_healthy
      helios:
        condition: service_started
      bitcoin-core:
        condition: service_started
    environment:
      DATABASE_URL: postgres://otc_user:otc_password@postgres:5432/otc_db
      RUST_LOG: info
      EVM_RPC_URL: http://helios:8545
      UNTRUSTED_EVM_TOKEN_INDEXER_URL: ${UNTRUSTED_EVM_TOKEN_INDEXER_URL}
      BITCOIN_RPC_URL: http://bitcoin-core:8332
      BITCOIN_RPC_AUTH: user:pass
      ELECTRUM_HTTP_SERVER_URL: ${UNTRUSTED_ELECTRUM_HTTP_SERVER_URL}
      WHITELISTED_MM_FILE: /app/prod_whitelisted_market_makers.json
      CORS_DOMAIN: "*.rift.trade"
      CHAINALYSIS_HOST: ${CHAINALYSIS_HOST}
      CHAINALYSIS_TOKEN: ${CHAINALYSIS_TOKEN}
    ports:
      - "4422:4422"
    networks:
      - tee-network
    volumes:
      - ${TAPPD_SOCK_PATH:-/var/run/tappd.sock}:/var/run/tappd.sock
    platform: linux/amd64

networks:
  tee-network:
    driver: bridge

volumes:
  postgres_data:
  bitcoin_data:
