configs:
  bitcoin-entrypoint:
    content: |
      #!/bin/bash
      set -euo pipefail
      archive_url="https://rift-blockchain-archive.s3.us-west-1.amazonaws.com/bitcoind-datadir-2025-09-11.tar.lz4"

      echo "Checking Bitcoin directory: $$BITCOIN_DATA_DIR"

      if [[ ! -d "$$BITCOIN_DATA_DIR/blocks" ]] && [[ ! -d "$$BITCOIN_DATA_DIR/chainstate" ]]; then
          echo "Bitcoin data directory appears to be empty. Downloading blockchain data..."
          echo "This may take a while depending on your internet connection..."
          
          temp_dir="$$(mktemp -d)"
          trap "rm -rf $$temp_dir" EXIT
          
          echo "Downloading from: $$archive_url"
          
          archive_file="$$temp_dir/blockchain-archive.tar.lz4"
          echo "Downloading to temporary file: $$archive_file"
          echo "Using aria2c with 8 parallel connections for optimal speed..."
          
          if aria2c \
              --max-connection-per-server=8 \
              --split=8 \
              --max-concurrent-downloads=1 \
              --continue=true \
              --retry-wait=5 \
              --max-tries=3 \
              --timeout=60 \
              --connect-timeout=10 \
              --file-allocation=none \
              --check-integrity=false \
              --summary-interval=10 \
              --download-result=hide \
              --console-log-level=info \
              --dir="$$temp_dir" \
              --out="blockchain-archive.tar.lz4" \
              "$$archive_url"; then
              
              echo "Download completed. Extracting archive directly to $$BITCOIN_DATA_DIR..."
              if tar -I lz4 -xf $$archive_file -C $$BITCOIN_DATA_DIR; then
                  rm -f $$archive_file
                  echo "Download and extraction successful"
                  
                  
                  chown -R bitcoin:bitcoin $$BITCOIN_DATA_DIR
                  
                  echo "Blockchain data initialization complete"
                  echo "Data directory size: $(du -sh $$BITCOIN_DATA_DIR | cut -f1)"
              else
                  echo "Error: Failed to extract archive"
                  rm -f $$archive_file
                  echo "Warning: Failed to download blockchain data. Bitcoin will sync from genesis block."
                  echo "This will take significantly longer but is still functional."
              fi
          else
              echo "Warning: Failed to download blockchain data. Bitcoin will sync from genesis block."
              echo "This will take significantly longer but is still functional."
          fi
      else
          echo "Bitcoin data directory already contains blockchain data"
          echo "Data directory size: $(du -sh $$BITCOIN_DATA_DIR | cut -f1)"
      fi
      rm -rf /tmp/*

      echo "Starting Bitcoin Core with arguments: $*"
      exec bitcoind "$@"

  prometheus-config:
    content: |
      global:
        scrape_interval: 15s
      scrape_configs:
        - job_name: prometheus
          static_configs:
            - targets:
                - prometheus:9090
        - job_name: node-exporter
          static_configs:
            - targets:
                - node-exporter:9100
        - job_name: cadvisor
          static_configs:
            - targets:
                - cadvisor:8080

  grafana-datasource:
    content: |
      apiVersion: 1
      deleteDatasources:
        - name: Prometheus
      datasources:
        - name: Prometheus
          uid: PBFA97CFB590B2093
          type: prometheus
          access: proxy
          url: http://prometheus:9090
          isDefault: true

  grafana-dashboard-provider:
    content: |
      apiVersion: 1
      providers:
        - name: Default
          orgId: 1
          folder: ""
          type: file
          options:
            path: /etc/grafana/provisioning/dashboards

  grafana-node-dashboard:
    content: |
      {
        "annotations": {
          "list": [
            {
              "builtIn": 1,
              "datasource": {
                "type": "grafana",
                "uid": "grafana"
              },
              "enable": true,
              "hide": true,
              "iconColor": "rgba(0, 211, 255, 1)",
              "name": "Annotations & Alerts",
              "type": "dashboard"
            }
          ]
        },
        "editable": true,
        "fiscalYearStartMonth": 0,
        "graphTooltip": 1,
        "links": [],
        "panels": [
          {
            "datasource": {
              "type": "prometheus",
              "uid": "PBFA97CFB590B2093"
            },
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "palette-classic"
                },
                "mappings": [],
                "unit": "percent"
              },
              "overrides": []
            },
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 0,
              "y": 0
            },
            "id": 1,
            "options": {
              "legend": {
                "calcs": [],
                "displayMode": "list",
                "placement": "right",
                "showLegend": true
              },
              "tooltip": {
                "mode": "single",
                "sort": "none"
              }
            },
            "targets": [
              {
                "editorMode": "code",
                "expr": "sum by (name) (rate(container_cpu_usage_seconds_total{name=~\"tee-.*\"}[5m])) * 100",
                "legendFormat": "{{name}}",
                "range": true,
                "refId": "A",
                "datasource": {
                  "type": "prometheus",
                  "uid": "PBFA97CFB590B2093"
                }
              }
            ],
            "title": "Container CPU Usage",
            "type": "timeseries"
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "PBFA97CFB590B2093"
            },
            "fieldConfig": {
              "defaults": {
                "unit": "bytes"
              },
              "overrides": []
            },
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 12,
              "y": 0
            },
            "id": 2,
            "options": {
              "legend": {
                "displayMode": "list",
                "placement": "right",
                "showLegend": true
              },
              "tooltip": {
                "mode": "single",
                "sort": "none"
              }
            },
            "targets": [
              {
                "editorMode": "code",
                "expr": "max by (name) (container_memory_usage_bytes{name=~\"tee-.*\"})",
                "legendFormat": "{{name}}",
                "range": true,
                "refId": "A",
                "datasource": {
                  "type": "prometheus",
                  "uid": "PBFA97CFB590B2093"
                }
              }
            ],
            "title": "Container Memory Usage",
            "type": "timeseries"
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "PBFA97CFB590B2093"
            },
            "fieldConfig": {
              "defaults": {
                "unit": "MBs"
              },
              "overrides": []
            },
            "gridPos": {
              "h": 8,
              "w": 24,
              "x": 0,
              "y": 8
            },
            "id": 4,
            "options": {
              "legend": {
                "displayMode": "list",
                "placement": "right",
                "showLegend": true
              },
              "tooltip": {
                "mode": "single",
                "sort": "none"
              }
            },
            "targets": [
              {
                "editorMode": "code",
                "expr": "sum by (name) (rate(container_network_receive_bytes_total{name=~\"tee-.*\", interface!=\"lo\"}[5m]))",
                "legendFormat": "RX {{name}}",
                "range": true,
                "refId": "A",
                "datasource": {
                  "type": "prometheus",
                  "uid": "PBFA97CFB590B2093"
                }
              },
              {
                "editorMode": "code",
                "expr": "sum by (name) (rate(container_network_transmit_bytes_total{name=~\"tee-.*\", interface!=\"lo\"}[5m]))",
                "legendFormat": "TX {{name}}",
                "range": true,
                "refId": "B",
                "datasource": {
                  "type": "prometheus",
                  "uid": "PBFA97CFB590B2093"
                }
              }
            ],
            "title": "Container Network I/O",
            "type": "timeseries"
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "PBFA97CFB590B2093"
            },
            "fieldConfig": {
              "defaults": {
                "unit": "percent"
              },
              "overrides": []
            },
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 0,
              "y": 16
            },
            "id": 5,
            "options": {
              "legend": {
                "displayMode": "list",
                "placement": "right",
                "showLegend": true
              },
              "tooltip": {
                "mode": "single",
                "sort": "none"
              }
            },
            "targets": [
              {
                "editorMode": "code",
                "expr": "(1 - avg by (instance) (rate(node_cpu_seconds_total{mode=\"idle\"}[5m]))) * 100",
                "legendFormat": "CPU {{instance}}",
                "range": true,
                "refId": "A",
                "datasource": {
                  "type": "prometheus",
                  "uid": "PBFA97CFB590B2093"
                }
              }
            ],
            "title": "Host CPU Usage",
            "type": "timeseries"
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "PBFA97CFB590B2093"
            },
            "fieldConfig": {
              "defaults": {
                "unit": "percent"
              },
              "overrides": []
            },
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 12,
              "y": 16
            },
            "id": 6,
            "options": {
              "legend": {
                "displayMode": "list",
                "placement": "right",
                "showLegend": true
              },
              "tooltip": {
                "mode": "single",
                "sort": "none"
              }
            },
            "targets": [
              {
                "editorMode": "code",
                "expr": "(1 - sum(node_memory_MemAvailable_bytes) / sum(node_memory_MemTotal_bytes)) * 100",
                "legendFormat": "Host Memory",
                "range": true,
                "refId": "A",
                "datasource": {
                  "type": "prometheus",
                  "uid": "PBFA97CFB590B2093"
                }
              }
            ],
            "title": "Host Memory Usage",
            "type": "timeseries"
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "PBFA97CFB590B2093"
            },
            "fieldConfig": {
              "defaults": {
                "unit": "bytes"
              },
              "overrides": []
            },
            "gridPos": {
              "h": 8,
              "w": 24,
              "x": 0,
              "y": 24
            },
            "id": 7,
            "options": {
              "legend": {
                "displayMode": "list",
                "placement": "right",
                "showLegend": true
              },
              "tooltip": {
                "mode": "single",
                "sort": "none"
              }
            },
            "targets": [
              {
                "datasource": {
                  "type": "prometheus",
                  "uid": "PBFA97CFB590B2093"
                },
                "editorMode": "code",
                "expr": "sum(node_filesystem_size_bytes{fstype!~\"tmpfs|overlay\", mountpoint!~\"/(sys|proc|dev|run)(/.*)?\"})",
                "legendFormat": "Size",
                "range": true,
                "refId": "A"
              },
              {
                "datasource": {
                  "type": "prometheus",
                  "uid": "PBFA97CFB590B2093"
                },
                "editorMode": "code",
                "expr": "sum(node_filesystem_free_bytes{fstype!~\"tmpfs|overlay\", mountpoint!~\"/(sys|proc|dev|run)(/.*)?\"})",
                "legendFormat": "Free",
                "range": true,
                "refId": "B"
              }
            ],
            "title": "Host Storage",
            "type": "timeseries"
          }
        ],
        "refresh": "30s",
        "schemaVersion": 38,
        "style": "dark",
        "tags": [
          "monitoring"
        ],
        "templating": {
          "list": []
        },
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "timepicker": {},
        "timezone": "",
        "title": "TEE Monitoring",
        "uid": "tee-monitoring",
        "version": 1,
        "weekStart": ""
      }

services:
  postgres:
    image: postgres:16-alpine
    container_name: tee-otc-postgres
    environment:
      POSTGRES_USER: otc_user
      POSTGRES_PASSWORD: otc_password
      POSTGRES_DB: otc_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U otc_user -d otc_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - tee-network

  bitcoin-core:
    container_name: tee-bitcoin-core
    build:
      context: .
      dockerfile_inline: |
        FROM debian:bookworm-slim
        RUN apt-get update \
          && apt-get install -y --no-install-recommends \
             ca-certificates \
             curl \
             tar \
             bash \
             lz4 \
             wget \
             aria2 \
          && rm -rf /var/lib/apt/lists/*

        RUN useradd -m -u 1000 -s /bin/bash bitcoin \
          && mkdir -p /home/bitcoin/.bitcoin \
          && chown -R bitcoin:bitcoin /home/bitcoin/.bitcoin
        WORKDIR /opt/bitcoin
        RUN curl -fsSL "https://bitcoincore.org/bin/bitcoin-core-29.0/bitcoin-29.0-x86_64-linux-gnu.tar.gz" -o bitcoin.tar.gz \
          && tar -xzf bitcoin.tar.gz --strip-components=1 \
          && install -m 0755 -o root -g root -t /usr/local/bin bin/* \
          && rm -rf /opt/bitcoin

        EXPOSE 8332 8333
        VOLUME ["/home/bitcoin/.bitcoin"]
        USER bitcoin
        WORKDIR /home/bitcoin
        ENTRYPOINT ["/usr/local/bin/bitcoin-entrypoint.sh"]
    environment:
      BITCOIN_DATA_DIR: /home/bitcoin/.bitcoin
    command:
      - "-server=1"
      - "-txindex=1"
      - "-rpcbind=0.0.0.0"
      - "-rpcallowip=0.0.0.0/0"
      - "-rpcuser=user"
      - "-rpcpassword=pass"
      - "-datadir=/home/bitcoin/.bitcoin"
      - "-fallbackfee=0.0002"
    volumes:
      - bitcoin_data:/home/bitcoin/.bitcoin
    configs:
      - source: bitcoin-entrypoint
        target: /usr/local/bin/bitcoin-entrypoint.sh
        mode: 0755
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "bitcoin-cli -rpcuser=user -rpcpassword=pass getblockchaininfo > /dev/null || exit 1",
        ]
      interval: 20s
      timeout: 10s
      retries: 10
      start_period: 30s
    networks:
      - tee-network
    platform: linux/amd64

  otc-server:
    image: riftresearch/otc-server:main-e2af694
    container_name: tee-otc-server
    depends_on:
      postgres:
        condition: service_healthy
      bitcoin-core:
        condition: service_started
    environment:
      GRANT_SUDO: yes
      DATABASE_URL: postgres://otc_user:otc_password@postgres:5432/otc_db
      RUST_LOG: info 
      EVM_RPC_URL: ${UNTRUSTED_EVM_RPC_URL} # Temporarily use rpc blindly until reth + lighthouse shipped here
      UNTRUSTED_EVM_TOKEN_INDEXER_URL: ${UNTRUSTED_EVM_TOKEN_INDEXER_URL}
      BITCOIN_RPC_URL: http://bitcoin-core:8332
      BITCOIN_RPC_AUTH: user:pass
      ELECTRUM_HTTP_SERVER_URL: ${UNTRUSTED_ELECTRUM_HTTP_SERVER_URL}
      CORS_DOMAIN: "*"
      CHAINALYSIS_HOST: ${CHAINALYSIS_HOST}
      CHAINALYSIS_TOKEN: ${CHAINALYSIS_TOKEN}
      CONFIG_DIR: /app/config
      DSTACK_SOCK_PATH: /var/run/dstack.sock
    ports:
      - "4422:4422"
    networks:
      - tee-network
    volumes:
      - ${DSTACK_SOCK_PATH:-/var/run/dstack.sock}:/var/run/dstack.sock
      - otc_server_config_data:/app/config
    platform: linux/amd64
    user: root

  node-exporter:
    image: prom/node-exporter:v1.8.2
    container_name: tee-node-exporter
    restart: unless-stopped
    pid: host
    command:
      - "--path.rootfs=/rootfs"
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
    volumes:
      - /:/rootfs:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "9100:9100"
    networks:
      - tee-network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    container_name: tee-cadvisor
    restart: unless-stopped
    privileged: true
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - tee-network

  prometheus:
    image: prom/prometheus:v2.54.1
    container_name: tee-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    depends_on:
      node-exporter:
        condition: service_started
      cadvisor:
        condition: service_started
    volumes:
      - prometheus_data:/prometheus
    configs:
      - source: prometheus-config
        target: /etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.enable-lifecycle"
    networks:
      - tee-network

  grafana:
    image: grafana/grafana:10.4.2
    container_name: tee-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      prometheus:
        condition: service_started
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: a02b289e6fed06928e0e5cf8ea2ab5e1b49a663781bae81a1554d937c1e0d1ea 
    configs:
      - source: grafana-datasource
        target: /etc/grafana/provisioning/datasources/prometheus.yml
      - source: grafana-dashboard-provider
        target: /etc/grafana/provisioning/dashboards/provider.yml
      - source: grafana-node-dashboard
        target: /etc/grafana/provisioning/dashboards/tee-monitoring.json
    networks:
      - tee-network

networks:
  tee-network:
    driver: bridge

volumes:
  postgres_data:
  bitcoin_data:
  otc_server_config_data:
  prometheus_data:
